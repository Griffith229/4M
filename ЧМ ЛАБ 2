def bisection_method(f, a, b, tol):
    while (b - a) / 2 > tol:
        c = (a + b) / 2
        if f(c) == 0:
            return c
        elif f(c) * f(a) < 0:
            b = c
        else:
            a = c
    return (a + b) / 2

def chord_method(f, a, b, tol):
    while abs(f(b)) > tol:
        c = a - (b - a) * f(a) / (f(b) - f(a))
        if f(c) == 0:
            return c
        elif f(c) * f(a) < 0:
            b = c
        else:
            a = c
    return b
def f(x):
    return 9*x**4 + 12*x**3 - 36*x**2 - 2
a = -2
b = -1
root_bisection = bisection_method(f, a, b, 0.0001)
print("Корінь методом бісекції:", root_bisection)
root_chord = chord_method(f, a, b, 0.0001)
print("Корінь методом хорд:", root_chord)
